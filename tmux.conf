# guide for some cosmetics 
# https://cassidy.codes/blog/2019-08-03-tmux-colour-theme/

# was recommended by :checkhealth
set-option -g focus-events on

unbind C-b
set -g prefix C-g
bind C-g send-prefix

bind-key C-g last-window

bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# bind -n C-H switch-client -p
# bind -n C-L switch-client -n


# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1

# Rename window to the current directory name
bind-key R rename-window "#{b:pane_current_path}"

# Move panes between existing windows.
bind-key m command-prompt -p "Move to window (e.g. 3.1): #"  "join-pane -h -t '%%'"
bind-key M command-prompt -p "Move to session (e.g. main:3): #"  "move-pane -t '%%'"

# Renumber windows when one of them is closed
set-option -g renumber-windows on

# Create new window with active pane.
bind-key b command-prompt -p "Break pane: #"  "break-pane -t '%%'"

# Correct the TERM variable required by neovim:
# https://github.com/neovim/neovim/wiki/FAQ#home-or-some-other-special-key-doesnt-work
set -g default-terminal "tmux-256color"
set-option -ga terminal-overrides ",xterm-256color:Tc"

# set -g default-terminal "tmux-256color"
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

bind-key -n C-M-J split-window -v -c "#{pane_current_path}"
bind-key -n C-M-K split-window -v -b -c "#{pane_current_path}"
bind-key -n C-M-H split-window -h -b -c "#{pane_current_path}"
bind-key -n C-M-L split-window -h -c "#{pane_current_path}"

unbind '"'
unbind %

bind-key -n M-J resize-pane -D 5
bind-key -n M-K resize-pane -U 5
bind-key -n M-H resize-pane -L 5
bind-key -n M-L resize-pane -R 5
bind-key -n C-J select-pane -U
bind-key -n C-K select-pane -D
bind-key -n C-H select-pane -L
bind-key -n C-L select-pane -R

bind-key -n C-Q kill-pane 
bind-key -n C-N new-window -c "#{pane_current_path}"

set -g history-limit 10000

# mouse support (for scrolling)
set-option -g mouse on
# setw -g mode-keys vi

# # vi options
# set-window-option -g mode-keys vi
# # bind-key -T vi-copy 'v' begin-selection
# # bind-key -T vi-copy 'y' copy-selection
# unbind p
# # Vim style
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
# bind-key p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"
# # bind p paste-buffer

# # {{{ Smart pane switching with awareness of Vim splits.
# # See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#   # | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -T copy-mode-vi C-h select-pane -L
# bind-key -T copy-mode-vi C-j select-pane -D
# bind-key -T copy-mode-vi C-k select-pane -U
# bind-key -T copy-mode-vi C-l select-pane -R
# # }}}

# Vim-style in copy-mode
bind-key Escape copy-mode
bind-key v copy-mode
bind-key -T copy-mode-vi Escape send -X cancel
bind-key p paste-buffer
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi r send -X rectangle-toggle

bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
bind-key p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# don't rename windows automatically
# set-option -g allow-rename off
# Automatically set window title
set-window-option -g automatic-rename on 
set-option -g set-titles on 

# X clipboard integration with xclip
# bind-key -T vi-copy 'y' copy-pipe "xclip -i -sel clip > /dev/null"
# bind-key p run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"

# No delay for escape key press
set -sg escape-time 0


# THEME

# panes
# set -g pane-border-fg default
set -g pane-border-style fg=colour24
set -g pane-active-border-style fg=colour23

## Status bar design
# status line
# set -g status-utf8 on
set -g status-justify left
set -g status-bg default
# set -g status-fg '#cc4400'
set -g status-fg '#d75f00'

set -g status-style bg=colour237,fg=colour8
set -g status-interval 1

# # status left
# # are we controlling tmux or the content of the panes?
# set -g status-left '#[bg=#f8f8f2]#[fg=#282a36]#{?client_prefix,#[bg=#ff79c6],} ☺ '

# are we zoomed into a pane?
set -ga status-left '#[bg=#44475a]#[fg=#ff79c6] #{?window_zoomed_flag, ↕  ,   }'

# window status
# set-window-option -g window-status-style fg=colour24,bg=default
# set-window-option -g window-status-current-style fg=colour23,bg='#282a36'
set-window-option -g window-status-style fg='#d75f00',bg=default
set-window-option -g window-status-current-style fg='#dd571c',bg='#282a36'

# status right
set -g status-right "#[fg='#8b3e2f']#H"

# # messaging
# set -g message-fg black
# set -g message-bg yellow
# set -g message-command-fg blue
# set -g message-command-bg black

# #window mode
# setw -g mode-bg colour6
# setw -g mode-fg colour3

# set -g status off
# vim: foldmethod=marker sw=4
